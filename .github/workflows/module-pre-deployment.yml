name: terraform-pre-deployment

on:
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash
    working-directory: ./test
jobs:
  terratest_plan:
    name: 'Terratest Plan'
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name != 'pull_request'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@main


      - id: 'auth'
        name: 'Authenticate to GCP'
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/429477076248/locations/global/workloadIdentityPools/my-pool/providers/demo-provider'
          service_account: ${{ secrets.GCP_SA_EMAIL }}


      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Scan IaC - tfsec
        if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif         

      - name: Upload SARIF file
        if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt --check

      - name: Terraform Init
        id: init
        run: terraform init --backend-config="storage_account_name=$STORAGE_ACCOUNT" --backend-config="container_name=$CONTAINER_NAME" --backend-config="resource_group_name=$RESOURCE_GROUP" --backend-config="key=$TF_KEY"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Set up Go For Terratest
        uses: actions/setup-go@v2

      - name: Setup Dependencies
        run:  go get -v -t -d && go mod tidy

      - name: Perform Unit Test
        run: go test -timeout 30m -p 1
